{"version":3,"sources":["App.tsx","serviceWorker.js","index.js"],"names":["Contact","href","children","size","className","defaultSkewColor","innerClassName","Qualification","opener","copy","Profession","title","year","projects","tech","map","t","Project","Tech","Portrait","src","alt","Skew","clipPath","style","padding","paddingLeft","Math","floor","paddingRight","App","content","qualifications","q","experience","e","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oQAMMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACd,cAAC,EAAD,CAAMC,KAAM,EACVC,UAAS,UAAKC,EAAL,mCACTC,eAAc,UAAKD,EAAL,yBAFhB,SAGE,mBAAGD,UAAU,+DAA+DH,KAAMA,EAAlF,SACIC,OAKFK,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACpB,cAAC,IAAD,UACE,gCACE,oBAAIL,UAAU,mCAAd,SACMI,IAER,4BAAKC,UAIHC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMH,EAAhB,EAAgBA,KAAMI,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,KAAhC,OACjB,cAAC,IAAD,UACE,sBAAKV,UAAU,OAAf,UACE,oBAAIA,UAAU,yDAAd,SACMO,IAEN,oBAAIP,UAAU,yBAAd,SACMQ,IAEN,mBAAGR,UAAU,UAAb,SAAyBK,IACzB,qBAAKL,UAAU,2BAAf,SACIS,EAASE,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OAAc,cAAC,EAAD,UAAWA,SAE1C,qBAAKL,UAAU,sBAAf,SAAuCU,EAAKC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,UAAQA,eAK/DC,EAAU,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAH,OACd,sBAAKE,UAAU,OAAf,UACE,8BAAK,cAAC,IAAD,CAAgBA,UAAU,yBAC/B,8BAAOF,QAILgB,EAAO,SAAC,GAAD,IAAGhB,EAAH,EAAGA,SAAH,OACX,cAAC,EAAD,CAAMC,KAAM,EAAGC,UAAU,qCAAzB,SACE,+BAAQF,OAINiB,EAAW,kBAAO,qBACtBC,IAA8B,WAC9BhB,UAAU,sCACViB,IAAI,0BAIAhB,EAAmB,gBACnBiB,EAAO,SAAC,GAA2F,IAAD,IAAxFlB,iBAAwF,MAA5EC,EAA4E,MAA1DF,YAA0D,MAArD,EAAqD,MAAlDG,sBAAkD,MAAjCD,EAAiC,EAAfH,EAAe,EAAfA,SACjFqB,EAAQ,kBAAcpB,EAAd,yBAAmC,IAAIA,EAAvC,oBAEd,OAAQ,qBAAKC,UAAS,UAAKA,GACvBoB,MAAO,CAAED,WAAUE,QAAS,OADxB,SAEF,qBAAKrB,UAAS,iCAA4BE,GACxCkB,MAAO,CACLD,WACAG,YAAaC,KAAKC,MAAW,IAALzB,GAAY,KACpC0B,aAAcF,KAAKC,MAAW,IAALzB,GAAY,MAJzC,SAKID,OA6DG4B,MAxDf,WACE,OAAO,qCACL,sBAAK1B,UAAU,wBAAf,UACE,qBAAKA,UAAU,aAAf,SACA,cAAC,EAAD,CAAMA,UAAS,yBAAoBC,GAAnC,SACE,cAAC,EAAD,QAGF,oBAAID,UAAU,wBAAd,uBACA,yBAASA,UAAU,kBAAnB,SACE,qBAAKA,UAAU,oBAAf,SACE,mBAAGA,UAAU,2BAAb,8OAIJ,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CAASH,KAAK,mCAAd,yBAGA,cAAC,EAAD,CAASA,KAAK,0BAAd,gCAKJ,qBAAKG,UAAU,qBAAf,SACE,sBAAKA,UAAU,8BAAf,UACA,oBAAIA,UAAU,qCAAd,4BACA,yBAASA,UAAU,sBAAnB,SAEI2B,EAAQC,eAAejB,KAAI,SAACkB,GAAD,OAAO,cAAC,EAAD,eAAmBA,cAK3D,sBAAK7B,UAAU,8BAAf,UACE,oBAAIA,UAAU,qCAAd,qCACA,yBAASA,UAAU,4CAAnB,SAEE2B,EAAQG,WAAWnB,KAAI,SAACoB,GAAD,OAAO,cAAC,EAAD,eAAgBA,SAGhD,oBAAI/B,UAAU,qCAAd,uBACA,cAAC,IAAD,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,yDAAd,yCAGA,oBAAIA,UAAU,0CAAd,kDCnHUgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.9c9e7bf0.chunk.js","sourcesContent":["import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport './style.css';\nimport content from './content.json';\nimport { FaChevronRight } from \"react-icons/fa\";\n\nconst Contact = ({ href, children }) => (\n  <Skew size={2}\n    className={`${defaultSkewColor} hover:bg-neutral-900 w-48 flex`}\n    innerClassName={`${defaultSkewColor} hover:bg-neutral-900`}>\n    <a className='font-mono text-lg inline-block w-full hover:text-neutral-200' href={href}>\n      { children }\n    </a>\n  </Skew>\n)\n\nconst Qualification = ({ opener, copy }) => (\n  <Fade>\n    <div>\n      <h3 className='font-mono font-extrabold text-lg'>\n          { opener }\n      </h3>\n    <p>{ copy }</p></div>\n  </Fade>\n)\n\nconst Profession = ({ title, year, copy, projects, tech }) => (\n  <Fade>\n    <div className='my-4'>\n      <h3 className='font-mono font-extrabold text-2xl text-accent-300 my-2'>\n          { title }\n      </h3>\n      <h4 className='font-mono text-lg my-2'>\n          { year }\n      </h4>\n      <p className='text-lg'>{ copy }</p>\n      <div className='flex flex-col my-4 gap-4'>\n        { projects.map(({ copy }) => <Project>{ copy }</Project>) }\n      </div>\n      <div className='flex flex-wrap my-4'>{ tech.map((t) => <Tech>{ t }</Tech>) }</div>\n    </div>\n  </Fade>\n)\n\nconst Project = ({ children }) => (\n  <div className='flex'>\n    <div><FaChevronRight className='text-cool-500 m-1 ' /></div>\n    <div>{ children }</div>\n  </div>\n)\n\nconst Tech = ({ children }) => (\n  <Skew size={2} className='text-neutral-800 font-bold text-sm'>\n    <span>{ children }</span>\n  </Skew>\n  )\n\nconst Portrait = () => (<img\n  src={process.env.PUBLIC_URL + '/pic.jpg'}\n  className=\"max-w-none absolute -left-8 -top-12\"\n  alt=\"Ben's handsome face.\"\n  />)\n\n/* need this to make sure tailwind compiles the style */\nconst defaultSkewColor = 'bg-accent-300';\nconst Skew = ({ className = defaultSkewColor, size=7, innerClassName = defaultSkewColor, children }) => {\n  const clipPath = `polygon(${size}% 0, 100% 0%, ${100-size}% 100%, 0% 100%)`\n\n  return (<div className={`${className}`}\n      style={{ clipPath, padding: '5px' }}>\n        <div className={`w-full h-full relative ${innerClassName}`}\n          style={{\n            clipPath,\n            paddingLeft: Math.floor(size*3.5) + 'px',\n            paddingRight: Math.floor(size*3.5) + 'px' }}>\n          { children }\n        </div>\n    </div>)\n}\n\nfunction App() {\n  return <>\n    <div className='max-w-3xl mx-auto p-4'>\n      <div className='mb-6 mt-24'>\n      <Skew className={`w-48 h-48 flex ${defaultSkewColor}`}>\n        <Portrait />\n      </Skew>\n      </div>\n      <h1 className='display text-8xl my-6'>ben knize</h1>\n      <section className='flex my-4 gap-4'>\n        <div className='flex items-center'>\n          <p className='text-xl text-neutral-200'>Front-end engineer with 9+ years designing and developing UI/UX in enterprise web apps, dedicated to solving complex problems, focusing on maintainable and scalable code, prioritizing clean and enjoyable User Experience.</p>\n        </div>\n      </section>\n\n      <div className='flex my-4 gap-2'>\n        <Contact href='http://linkedin.com/in/benknize/'>\n          in/benknize\n        </Contact>\n        <Contact href='mailto:bknize@gmail.com'>\n          bknize@gmail\n        </Contact>\n      </div>\n    </div>\n    <div className='w-full bg-cool-400'> \n      <div className='max-w-3xl mx-auto p-4 pb-24'>\n      <h2 className='display md:text-6xl text-4xl my-12'>qualifications</h2>\n      <section className='flex flex-col gap-4'>\n        {\n          content.qualifications.map((q) => <Qualification {...q} />)\n        }\n      </section>\n      </div>\n    </div>\n    <div className='max-w-3xl mx-auto p-4 pb-24'>\n      <h2 className='display md:text-6xl text-4xl my-12'>professional experience</h2>\n      <section className='my-4 flex flex-col gap-4 text-neutral-200'>\n      {\n        content.experience.map((e) => <Profession {...e} />)\n      }\n      </section>\n      <h2 className='display md:text-6xl text-4xl my-12'>education</h2>\n      <Fade>\n        <div className='my-4'>\n          <h3 className='font-mono font-extrabold text-2xl text-accent-300 my-2'>\n              Graphic Design & Multimedia\n          </h3>\n          <h4 className='font-mono text-lg my-2 text-neutral-200'>\n              Bradley University, 2015\n          </h4>\n        </div>\n      </Fade>\n    </div>\n  </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}