{"version":3,"sources":["Content.tsx","App.tsx","serviceWorker.js","index.js"],"names":["timeline","date","company","job","copy","tags","App","className","src","alt","href","map","el","index","tag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAAaA,EAAW,CACpB,CACEC,KAAM,UACNC,QAAS,eACTC,IAAK,0BACLC,KAAK,8KACLC,KAAM,CAAC,aAAc,UAAW,QAAS,OAAQ,UAEnD,CACEJ,KAAM,OACNC,QAAS,eACTC,IAAK,uBACLC,KAAK,wKACLC,KAAM,CAAC,MAAO,QAAS,YAAa,cAAe,OAAQ,MAAO,KAAM,WAE1E,CACEJ,KAAM,OACNC,QAAS,kBACTC,IAAK,kCACLC,KAAK,2FACLC,KAAM,CAAC,YAAa,cAAe,OAAQ,MAAO,WAEpD,CACEJ,KAAM,OACNC,QAAS,cACTC,IAAK,sCACLC,KAAK,6HACLC,KAAM,CAAC,YAAa,cAAe,OAAQ,MAAO,SAAU,WAE9D,CACEJ,KAAM,OACNC,QAAS,qBACTC,IAAK,gDACLC,KAAK,uEACLC,KAAM,CAAC,UAAW,W,eCgCTC,MA5Df,WACE,OACE,sBAAKC,UAAU,uDAAf,UACE,0BAASA,UAAU,uBAAnB,UACE,cAAC,IAAD,UAAM,oBAAIA,UAAU,6DAAd,yBACN,cAAC,IAAD,UAAM,oBAAIA,UAAU,uEAAd,qCAER,yBAASA,UAAU,0FAAnB,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,8CAAf,SACE,qBAAKC,IAA8B,WAAYD,UAAU,eAAeE,IAAI,2BAE9E,sBAAKF,UAAU,8CAAf,UACE,4BAAG,sBAAMA,UAAU,sBAAhB,iCACH,wNACA,uIACA,oGAAsE,mBAAGA,UAAU,mEAAmEG,KAAK,yCAArF,mBAAtE,8DACA,wDAA0B,mBAAGH,UAAU,mEAAmEG,KAAK,wCAArF,sBAA1B,OAAuK,mBAAGH,UAAU,mEAAmEG,KAAK,2BAArF,mBAAvK,OACA,2DAA6B,mBAAGH,UAAU,mEAAmEG,KAAK,4BAArF,kBAA7B,eAIN,0BAASH,UAAU,MAAnB,UACE,cAAC,IAAD,UAAM,oBAAIA,UAAU,yCAAd,uCAEN,qBAAKA,UAAU,+CAAf,SAEEP,EAASW,KAAI,SAACC,EAAIC,GAChB,OAAO,eAAC,IAAD,WACH,qBAAKN,UAAU,sEAAf,SACIK,EAAGX,OAEP,sBAAKM,UAAU,4DAAf,UACE,oBAAIA,UAAU,6CAAd,SACIK,EAAGT,MAEP,qBAAII,UAAU,gBAAd,cAAiCK,EAAGV,WACpC,4BAAKU,EAAGR,OAENQ,EAAGP,KAAKM,KAAI,SAACG,GACX,OAAO,sBAAgBP,UAAU,wEAA1B,SAAoGO,GAAzFA,oBASlC,cAAC,IAAD,UACE,yBAAQP,UAAU,kCAAlB,UACE,mBAAGG,KAAK,wCAAR,SAAgD,cAAC,IAAD,MAChD,mBAAGA,KAAK,2BAAR,SAAmC,cAAC,IAAD,MACnC,mBAAGA,KAAK,4BAAR,SAAoC,cAAC,IAAD,MAHtC,IAG6D,sBAAMH,UAAU,oCAAhB,qCC/CjDQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.09896277.chunk.js","sourcesContent":["export const timeline = [\n    {\n      date: 'Present',\n      company: 'CSE Software',\n      job: 'UI/UX and Front End Dev',\n      copy: `I'm designing, prototyping, and developing front end solutions for enterprise-scale web apps. I'm also mentoring juniors, writing standards, and picking up devops as I go.`,\n      tags: ['TypeScript', 'Angular', 'React', 'Sass', 'Figma']\n    },\n    {\n      date: '2018',\n      company: 'CSE Software',\n      job: 'Multimedia Developer',\n      copy: `Prior to joining my agency's enterprise team, I authored and deployed industrial and medical eLearning content for the multimedia team, and managed the company site.`,\n      tags: ['Vue', 'SCORM', 'Wordpress', 'Adobe Suite', 'HTML', 'CSS', 'JS', 'jQuery']\n    },\n    {\n      date: '2016',\n      company: 'Illinois Mutual',\n      job: 'Multimedia Developer, freelance',\n      copy: `Designed and printed brand-standard sales and B2B materials; maintained company website.`,\n      tags: ['Pre press', 'Adobe Suite', 'HTML', 'CSS', 'jQuery']\n    },\n    {\n      date: '2015',\n      company: 'Silver Oaks',\n      job: 'Interactive Media and Front End Dev',\n      copy: `Designed and coded interactive corporate expo and museum installations; built and supported small-business brochure sites.`,\n      tags: ['Wordpress', 'Adobe Suite', 'HTML', 'CSS', 'jQuery', 'Python']\n    },\n    {\n      date: '2015',\n      company: 'Bradley University',\n      job: 'Graphic Design major, Interactive media minor',\n      copy: `I finished Bradley part time, between hustling small freelance gigs.`,\n      tags: ['Student', 'Loans']\n    }\n  ]","import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { FaLinkedin, FaEnvelopeSquare, FaGithubSquare } from 'react-icons/fa'\nimport { timeline } from './Content'\nimport './fonts.css';\n\nfunction App() {\n  return (\n    <div className=\"container mx-auto px-10 flex flex-col justify-center\">\n      <section className=\"flex-auto py-20 pl-6\">\n        <Fade><h1 className=\"text-6xl font-serif lowercase tracking-tight text-teal-700\">Ben Knize</h1></Fade>\n        <Fade><h3 className=\"text-xl font-mono uppercase tracking-widest leading-10 text-teal-700\">Designer/Developer</h3></Fade>\n      </section>\n      <section className=\"flex-auto flex mt-12 p-8 text-gray-100 bg-gradient-to-r from-teal-400 to-blue-400 pb-20\">\n        <Fade>\n          <div className=\"mt-20 w-24 flex-shrink-0 sm:hidden md:block\">\n            <img src={process.env.PUBLIC_URL + '/pic.jpg'} className=\"rounded-full\" alt=\"Ben's handsome face.\" />\n          </div>\n          <div className=\"pl-8 tracking-wide leading-loose text-white\">\n            <p><span className=\"font-serif text-4xl\">Hi, I’m Ben.</span></p>\n            <p>I’m a developer, designer, and a compulsive maker of things. I like technical and experiential challenges, answering big questions, and navigating the space between art and code.</p>\n            <p>I’ve worked in enterprise development, eLearning, brochure sites, museum installations, and more.</p>\n            <p>In my free time, I write, sculpt, paint, collect, and cook. I love <a className=\"bg-white text-blue-400 hover:bg-sky-300 hover:text-teal-600 px-2\" href=\"https://music.apple.com/profile/bknize\">music</a>, taking board games seriously, and having another pint.</p>\n            <p>You can contact me via <a className=\"bg-white text-blue-400 hover:bg-sky-300 hover:text-teal-600 px-2\" href=\"https://www.linkedin.com/in/benknize/\">LinkedIn</a> or <a className=\"bg-white text-blue-400 hover:bg-sky-300 hover:text-teal-600 px-2\" href=\"mailto:b.knize@gmail.com\">email</a>.</p>\n            <p>Check out the source code <a className=\"bg-white text-blue-400 hover:bg-sky-300 hover:text-teal-600 px-2\" href=\"https://github.com/bknize\">here</a>.</p>\n          </div>\n        </Fade>\n      </section>\n      <section className=\"p-8\">\n        <Fade><h2 className=\"text-4xl text-teal-900 font-serif mt-8\">What have I been up to?</h2></Fade>\n        \n        <div className=\"grid grid-cols-4 md:grid-cols-6 mt-8 gap-y-4\">\n        {\n          timeline.map((el, index) => {\n            return <Fade>\n                <div className=\"col-span-1 leading-loose font-mono uppercase text-2xl text-blue-700\">\n                  { el.date }\n                </div>\n                <div className=\"col-span-3 md:col-span-5 pl-8 tracking-wide leading-loose\">\n                  <h3 className=\"font-mono uppercase text-2xl text-blue-700\">\n                    { el.job }\n                  </h3>\n                  <h4 className=\"text-teal-600\">@{ el.company }</h4>\n                  <p>{ el.copy }</p>\n                  {\n                    el.tags.map((tag) => {\n                      return <span key={tag} className=\"inline-block rounded-full bg-teal-400 text-sm p-1 px-3 m-1 text-white\">{ tag }</span>\n                    })\n                  }\n                </div>\n              </Fade>\n          })\n        }\n        </div>\n      </section>\n      <Fade>\n        <footer className=\"p-8 text-gray-400 text-4xl flex\">\n          <a href=\"https://www.linkedin.com/in/benknize/\"><FaLinkedin /></a>\n          <a href=\"mailto:b.knize@gmail.com\"><FaEnvelopeSquare /></a>\n          <a href=\"https://github.com/bknize\"><FaGithubSquare /></a> <span className=\"font-serif lowercase text-xl ml-2\">copyright 2021</span>\n        </footer>\n      </Fade>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}