{"version":3,"sources":["Content.tsx","App.tsx","serviceWorker.js","index.js"],"names":["timeline","date","company","job","copy","tags","Link","href","target","invert","children","className","TimelineEntry","entry","map","tag","App","useState","readMe","setReadMe","useEffect","axios","get","then","response","renderer","marked","Renderer","heading","text","level","paragraph","blockquote","decoded","atob","data","content","parsed","sanitized","sanitizeHtml","allowedClasses","catch","error","status","src","alt","i","dangerouslySetInnerHTML","__html","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4b3d1c20.chunk.js","sourcesContent":["export const timeline = [\n    {\n      date: '2018 / Now',\n      company: 'CSE Software',\n      job: 'FRONT-END DEV / UX DESIGNER',\n      copy: `I'm designing, prototyping, and developing front-end solutions for enterprise-scale web apps. I'm also mentoring juniors, writing standards, and picking up devops as I go.`,\n      tags: ['TypeScript', 'Angular', 'React', 'Sass', 'Figma', 'Redux', 'RxJS']\n    },\n    {\n      date: '2017 / 2018',\n      company: 'CSE Software',\n      job: 'Multimedia Developer',\n      copy: `Prior to joining the enterprise team, I authored and deployed industrial and medical eLearning web content and maintained Wordpress and enterprise sites.`,\n      tags: ['Vue', 'SCORM', 'Wordpress', 'Adobe Suite', 'HTML', 'CSS', 'JS', 'jQuery']\n    },\n    {\n      date: '2016',\n      company: 'Illinois Mutual',\n      job: 'Multimedia Developer, freelance',\n      copy: `Designed and printed brand-standard sales and B2B materials; maintained company website.`,\n      tags: ['Pre press', 'Adobe Suite', 'HTML', 'CSS', 'jQuery']\n    },\n    {\n      date: '2015',\n      company: 'Silver Oaks',\n      job: 'Interactive Media / Front-End Dev',\n      copy: `Designed and coded interactive corporate expo and museum installations; built and supported small-business brochure sites, including company site.`,\n      tags: ['Wordpress', 'Adobe Suite', 'HTML', 'CSS', 'jQuery', 'Python']\n    },\n    {\n      date: '2015',\n      company: 'Bradley University',\n      job: 'Graphic Design major / Interactive media minor',\n      copy: `I finished Bradley part time, between hustling small freelance gigs.`,\n      tags: ['Student', 'Loans']\n    }\n  ]","import React, { useEffect } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { FaLinkedin, FaEnvelopeSquare, FaGithubSquare } from 'react-icons/fa'\nimport { timeline } from './Content'\nimport axios from 'axios';\nimport marked from 'marked'\nimport sanitizeHtml from 'sanitize-html';\nimport './fonts.css';\nimport { useState } from 'react';\n\nfunction Link({ href, target = '_self', invert = false, children }) {\n  const classes = 'bg-white text-blue-400 hover:bg-sky-300 hover:text-teal-600 px-1'\n  const invertClasses = 'bg-blue-400 text-white hover:bg-sky-300 hover:text-teal-600 px-1'\n  return (<a className={ (!invert) ? classes : invertClasses } href={ href } target={ target }>{ children }</a>)\n}\n\nfunction TimelineEntry({ entry }) {\n  return (<Fade>\n    <div className=\"col-span-4 sm:col-span-1 text-xl font-mono uppercase tracking-widest text-teal-700\">\n      { entry.date }\n    </div>\n    <div className=\"col-span-4 sm:col-span-3 md:col-span-5 sm:pl-8 tracking-wide\">\n      <h3 className=\"font-mono uppercase text-2xl text-blue-700\">\n        { entry.job }\n      </h3>\n      <h4 className=\"text-teal-600\">@{ entry.company }</h4>\n      <p className=\"leading-loose\">{ entry.copy }</p>\n      {\n        entry.tags.map((tag) => {\n          return <span key={tag} className=\"inline-block bg-teal-400 text-sm p-1 px-3 m-1 text-white\">{ tag }</span>\n        })\n      }\n    </div>\n  </Fade>)\n}\n\n\n\nfunction App() {\n  const [readMe, setReadMe] = useState('<span class=\"text-xl font-mono uppercase tracking-widest\">Loading...</span>')\n\n  useEffect(() => {\n    axios\n      .get('https://api.github.com/repos/bknize/bknize.github.io/readme')\n      .then((response: any) => {\n        const renderer = new marked.Renderer()\n        renderer.heading = (text, level) => `<h${level} class=\"text-xl font-mono uppercase tracking-widest leading-10 my-4\">${text}</h${level}>`\n        renderer.paragraph = (text) => `<p class=\"leading-loose mt-2\">${text}</p>`\n        renderer.blockquote = (text) => `<blockquote class=\"border-l-2 ml-2 my-2 pl-4 p-2 pt-0 border-teal-700 text-blue-400\">${text}</blockquote>`\n\n        let decoded = atob(response.data.content)\n        let parsed = marked(decoded, { renderer: renderer })\n        let sanitized = sanitizeHtml(parsed, {\n          allowedClasses: {\n            'h1': [ 'text-xl', 'font-mono', 'uppercase', 'tracking-widest', 'leading-10', 'my-4' ],\n            'p': [ 'leading-loose', 'mt-2' ],\n            'blockquote': [ 'border-l-2', 'p-2', 'pl-4', 'ml-2', 'my-2', 'pt-0', 'border-teal-700', 'text-blue-400' ]\n          }\n        })\n        setReadMe(sanitized)\n      })\n      .catch(function (error) {\n        if (error.response) {\n          if (error.response.status === 403) {\n            setReadMe(`<p class=\"leading-loose\">Oops! We exceeded GitHub's rate limit. Check back in like an hour or so.</p>`)\n          } else {\n            setReadMe(`<p class=\"leading-loose\">Oops! We got an error.`)\n          }\n        }\n      })\n  })\n  return (\n    <div className=\"container mx-auto px-10 flex flex-col justify-center\">\n      <section className=\"flex-auto py-20 pl-6\">\n      \n        <Fade><h1 className=\"text-6xl font-serif lowercase tracking-tight text-teal-700 italic\">Ben Knize</h1></Fade>\n        <Fade><h3 className=\"text-xl font-mono uppercase tracking-widest leading-10 text-teal-700\">Developer/Designer</h3></Fade>\n      </section>\n      <section className=\"mt-12 p-8 text-gray-100 bg-gradient-to-r from-teal-400 to-blue-400 pb-20 grid grid-cols-4 md:grid-cols-6\">\n        <Fade>\n          <div className=\"col-span-4 sm:col-span-1\">\n            <img src={process.env.PUBLIC_URL + '/pic.jpg'} className=\"rounded-full\" alt=\"Ben's handsome face.\" />\n          </div>\n          <div className=\"tracking-wide leading-loose text-white col-span-4 sm:col-span-3 md:col-span-5 sm:pl-8\">\n            <p className=\"mb-4\"><span className=\"font-serif text-4xl italic\">Hi, I’m Ben.</span></p>\n            <p className=\"mb-4\">I’m a developer, designer, and a compulsive maker of things. I like technical and experiential challenges, answering big questions, and navigating the space between art and code.</p>\n            <p className=\"mb-4\">I’ve worked in enterprise development, eLearning, brochure sites, multimedia installations, and more.</p>\n            <p className=\"mb-4\">In my free time, I write, sculpt, paint, collect, and cook. I love <Link href=\"https://music.apple.com/profile/bknize\">music</Link>, taking board games seriously, and having another pint.</p>\n            <p>You can contact me via <Link target=\"_blank\" href=\"https://www.linkedin.com/in/benknize/\">LinkedIn</Link> or <Link href=\"mailto:b.knize@gmail.com\">email</Link>.</p>\n          </div>\n        </Fade>\n      </section>\n      <section className=\"p-8\">\n        <Fade>\n          <h2 className=\"text-4xl text-teal-900 font-serif mt-8 italic\">My blurb</h2>\n          <p className=\"leading-loose mt-8\">\n            Front-end developer with 5+ years experience designing UI/UX and developing for enterprise web apps and eLearning. My background in traditional print and digital media authoring informs my experience in technical architecture, complex use cases, and modern software workflows.\n          </p>\n          <p className=\"leading-loose\">\n            My resume is available <Link target=\"_blank\" invert={ true } href={process.env.PUBLIC_URL + '/resume.pdf'}>here</Link>.\n          </p>\n        </Fade>\n      </section>\n      <section className=\"p-8\">\n        <Fade><h2 className=\"text-4xl text-teal-900 font-serif mt-8 italic\">What have I been up to?</h2></Fade>\n        \n        <div className=\"grid grid-cols-4 md:grid-cols-6 mt-8 gap-y-4\">\n        {\n          timeline.map((entry, i) => {\n            return <TimelineEntry key={ i } entry={ entry } />\n          })\n        }\n        </div>\n      </section>\n      <section className=\"mt-12 p-8 text-gray-100 bg-gradient-to-r from-teal-400 to-blue-400 pb-20\">\n        <Fade><h2 className=\"text-4xl text-white font-serif mt-8 mb-4 italic leading-10\">Dev blog, sort of</h2></Fade>\n        <Fade>\n            <p className=\"mb-4\">This page's <Link href=\"https://github.com/bknize/bknize.github.io\">source code</Link> is public. The README is below, courtesy of <Link href=\"https://docs.github.com/en/rest\">GitHub's API</Link></p>\n        </Fade>\n      <div className=\"mt-8 p-4 text-teal-900 bg-gray-50\" dangerouslySetInnerHTML={{__html: readMe}} />\n      </section>\n      <Fade>\n        <footer className=\"p-8 text-gray-400 text-4xl flex\">\n          <a href=\"https://www.linkedin.com/in/benknize/\"><FaLinkedin /></a>\n          <a href=\"mailto:b.knize@gmail.com\"><FaEnvelopeSquare /></a>\n          <a href=\"https://github.com/bknize\"><FaGithubSquare /></a>\n        </footer>\n      </Fade>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}